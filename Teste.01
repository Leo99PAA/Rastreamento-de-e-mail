import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.image import MIMEImage

# Configurações do servidor SMTP
SMTP_SERVER = 'smtp.gmail.com'  # Exemplo com Gmail
SMTP_PORT = 587  # Porta do Gmail
SMTP_USER = 'seu_email@gmail.com'  # Seu e-mail
SMTP_PASSWORD = 'sua_senha'  # Sua senha ou senha de app

# Função para enviar o e-mail
def enviar_email(destinatario, assunto, corpo_html):
    # Configurar o servidor SMTP
    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.starttls()  # Criptografar a conexão
        server.login(SMTP_USER, SMTP_PASSWORD)

        # Criar a mensagem
        msg = MIMEMultipart()
        msg['From'] = SMTP_USER
        msg['To'] = destinatario
        msg['Subject'] = assunto

        # Corpo do e-mail em HTML com o pixel de rastreamento
        corpo = MIMEText(corpo_html, 'html')
        msg.attach(corpo)

        # Enviar o e-mail
        server.sendmail(SMTP_USER, destinatario, msg.as_string())

# Função para gerar o HTML com o pixel de rastreamento
def gerar_corpo_html():
    corpo_html = """
    <html>
    <body>
        <h1>Olá, este é um e-mail com rastreamento</h1>
        <p>Este e-mail contém um pixel de rastreamento para saber se foi aberto.</p>
        <!-- Pixel de rastreamento -->
        <img src="https://seu_servidor.com/pixel_de_rastreamento" width="1" height="1" alt="Pixel de Rastreamento"/>
    </body>
    </html>
    """
    return corpo_html

# Enviar o e-mail
destinatario = 'destinatario@example.com'
assunto = 'Teste de E-mail com Pixel de Rastreamento'
corpo_html = gerar_corpo_html()

enviar_email(destinatario, assunto, corpo_html)

print("E-mail enviado com sucesso!")
